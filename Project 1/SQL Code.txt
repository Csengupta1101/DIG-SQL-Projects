-- DataBase Creation --
CREATE SCHEMA `groccery_store` ;

-- Accessing The DataBase --
USE groccery_store ;

-- Items Table Creation --
CREATE TABLE `groccery_store`.`items` (
  `product_name` VARCHAR(45) NOT NULL,
  `price_per_unit` INT NOT NULL,
  `in_stock` INT NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`product_id`));

-- Customers Table Creation --

CREATE TABLE `groccery_store`.`customers` (
  `Cust_Name` VARCHAR(45) NULL,
  `Phone_Num` BIGINT(15) NOT NULL,
  `Purchased_Item_id` INT NOT NULL,
  `Transaction_id` INT NOT NULL,
  `Purchase_Qty` INT NOT NULL,
  `Cust_id` INT NOT NULL,
  PRIMARY KEY (`Transaction_id`),
  UNIQUE INDEX `Transaction_id_UNIQUE` (`Transaction_id` ASC) VISIBLE);


-- Transactions Table Creation --

CREATE TABLE `groccery_store`.`transaction` (
  `transactions_id` INT NOT NULL,
  `cust_id` INT NOT NULL,
  `Purchase Date` DATE NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`transactions_id`),
  UNIQUE INDEX `transactions_id_UNIQUE` (`transactions_id` ASC) VISIBLE);


-- Value Submission - Customers Table --

INSERT INTO `groccery_store`.`customers` (`Cust_Name`, `Phone_Num`, `Purchased_Item_id`, `Transaction_id`, `Purchase_Qty`, `Cust_id`) 
VALUES ('Ron', '9836234356', '1345', '10', '2', '001');
INSERT INTO `groccery_store`.`customers` (`Cust_Name`, `Phone_Num`, `Purchased_Item_id`, `Transaction_id`, `Purchase_Qty`, `Cust_id`) 
VALUES ('Harry', '9836234359', '1346', '11', '1', '002');
INSERT INTO `groccery_store`.`customers` (`Cust_Name`, `Phone_Num`, `Purchased_Item_id`, `Transaction_id`, `Purchase_Qty`, `Cust_id`) 
VALUES ('Neville', '9836234351', '1347', '12', '3', '003');
INSERT INTO `groccery_store`.`customers` (`Cust_Name`, `Phone_Num`, `Purchased_Item_id`, `Transaction_id`, `Purchase_Qty`, `Cust_id`) 
VALUES ('Neville', '9836234351', '1348', '13', '1', '003');
INSERT INTO `groccery_store`.`customers` (`Cust_Name`, `Phone_Num`, `Purchased_Item_id`, `Transaction_id`, `Purchase_Qty`, `Cust_id`) 
VALUES ('Harry', '9836234171', '1346', '14', '1', '004');

-- Value Submission - Items Table --

INSERT INTO `groccery_store`.`items` (`product_name`, `price_per_unit`, `in_stock`, `product_id`) VALUES ('Hair Oil', '130', '50', '1345');
INSERT INTO `groccery_store`.`items` (`product_name`, `price_per_unit`, `in_stock`, `product_id`) VALUES ('Shampoo', '85', '120', '1346');
INSERT INTO `groccery_store`.`items` (`product_name`, `price_per_unit`, `in_stock`, `product_id`) VALUES ('Rice', '25', '100', '1347');
INSERT INTO `groccery_store`.`items` (`product_name`, `price_per_unit`, `in_stock`, `product_id`) VALUES ('Icecream', '90', '35', '1348');


-- Value Submission - Transactions Table --

INSERT INTO `groccery_store`.`transaction` (`transactions_id`, `cust_id`, `Purchase Date`, `product_id`) VALUES ('10', '1', '2023-01-11', '1345');
INSERT INTO `groccery_store`.`transaction` (`transactions_id`, `cust_id`, `Purchase Date`, `product_id`) VALUES ('11', '2', '2022-12-10', '1346');
INSERT INTO `groccery_store`.`transaction` (`transactions_id`, `cust_id`, `Purchase Date`, `product_id`) VALUES ('12', '3', '2023-01-05', '1347');
INSERT INTO `groccery_store`.`transaction` (`transactions_id`, `cust_id`, `Purchase Date`, `product_id`) VALUES ('13', '3', '2023-01-08', '1348');
INSERT INTO `groccery_store`.`transaction` (`transactions_id`, `cust_id`, `Purchase Date`, `product_id`) VALUES ('14', '4', '2022-12-21', '1346');



-- Problem Statements Codes --

-- We can see that in the transactions table purchase date column is written with a space. let's fix this and change the column name with an _ ,--
ALTER TABLE `groccery_store`.`transaction` 
CHANGE COLUMN `Purchase Date` `purchase_date` DATE NOT NULL ;

-- Write a query to generate a column containing only years of purchase in the transactions table --
select cust_id , year(purchase_date) from transaction;
select cust_id , month(purchase_date) from transaction;
select cust_id , day(purchase_date) from transaction;


-- Write a query to showcase only the customer name and the product they purchased as per the database --
select c.cust_name , i.product_name 
from customers c 
join items i 
on c.Purchased_Item_id = i.product_id;


-- Write a query to showcase the customer name , the product they purchased and total purchase value in the result --
select c.cust_name , i.product_name, (c.purchase_qty*i.price_per_unit) as purchase_value 
from customers c 
join items i 
on c.Purchased_Item_id = i.product_id;

-- Write a query to display the customer name who have made more than one purchase --
select distinct(cust_name) from customers where cust_id in(
select cust_id
from transaction 
group by cust_id 
having count(cust_id)>1);

-- Write a query to display the amount spent on each purchase by the customers --
select c.cust_name , (c.purchase_qty*i.price_per_unit) as purchase_value , i.product_name 
from customers c 
join items i 
on c.Purchased_Item_id = i.product_id;
